<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>TemplateNotFound: base.html // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 4326578320,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "gHdl02T6FL8p4oeTiaqj";
    </script>
  </head>
  <body>
    <div class="debugger">
<h1>jinja2.exceptions.TemplateNotFound</h1>
<div class="detail">
  <p class="errormsg">TemplateNotFound: base.html</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-4326578384">
  <h4>File <cite class="filename">"/Library/Python/2.7/site-packages/flask/app.py"</cite>,
      line <em class="line">2000</em>,
      in <code class="function">__call__</code></h4>
  <div class="source"><pre class="line before"><span class="ws">                </span>error = None</pre>
<pre class="line before"><span class="ws">            </span>ctx.auto_pop(error)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;Shortcut for :attr:`wsgi_app`.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return '&lt;%s %r&gt;' % (</pre>
<pre class="line after"><span class="ws">            </span>self.__class__.__name__,</pre>
<pre class="line after"><span class="ws">            </span>self.name,</pre></div>
</div>

<li><div class="frame" id="frame-4326578448">
  <h4>File <cite class="filename">"/Library/Python/2.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1991</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source"><pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.make_response(self.handle_exception(e))</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre>
<pre class="line after"><span class="ws">            </span>if self.should_ignore_error(error):</pre>
<pre class="line after"><span class="ws">                </span>error = None</pre>
<pre class="line after"><span class="ws">            </span>ctx.auto_pop(error)</pre></div>
</div>

<li><div class="frame" id="frame-4326578512">
  <h4>File <cite class="filename">"/Library/Python/2.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1567</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>if handler is None:</pre></div>
</div>

<li><div class="frame" id="frame-4326578576">
  <h4>File <cite class="filename">"/Library/Python/2.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1988</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>ctx.push()</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.make_response(self.handle_exception(e))</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-4326578640">
  <h4>File <cite class="filename">"/Library/Python/2.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1641</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>response = self.make_response(rv)</pre>
<pre class="line after"><span class="ws">        </span>response = self.process_response(response)</pre>
<pre class="line after"><span class="ws">        </span>request_finished.send(self, response=response)</pre>
<pre class="line after"><span class="ws">        </span>return response</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-4326578704">
  <h4>File <cite class="filename">"/Library/Python/2.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1539</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source"><pre class="line before"><span class="ws">        </span># wants the traceback preserved in handle_http_exception.  Of course</pre>
<pre class="line before"><span class="ws">        </span># we cannot prevent users from trashing it themselves in a custom</pre>
<pre class="line before"><span class="ws">        </span># trap_http_exception method so that's their fault then.</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if isinstance(e, HTTPException) and not self.trap_http_exception(e):</pre>
<pre class="line current"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if handler is None:</pre>
<pre class="line after"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre></div>
</div>

<li><div class="frame" id="frame-4326578768">
  <h4>File <cite class="filename">"/Library/Python/2.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1498</em>,
      in <code class="function">handle_http_exception</code></h4>
  <div class="source"><pre class="line before"><span class="ws">            </span>return e</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line before"><span class="ws">            </span>return e</pre>
<pre class="line current"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def trap_http_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Checks if an HTTP exception should be trapped or not.  By default</pre>
<pre class="line after"><span class="ws">        </span>this will return ``False`` for all exceptions except for a bad request</pre>
<pre class="line after"><span class="ws">        </span>key error if ``TRAP_BAD_REQUEST_ERRORS`` is set to ``True``.  It</pre></div>
</div>

<li><div class="frame" id="frame-4326578832">
  <h4>File <cite class="filename">"/Users/kimkeezy/PycharmProjects/Andela-BootCamp/Week-Two/Library-Application/app.py"</cite>,
      line <em class="line">160</em>,
      in <code class="function">page_not_found</code></h4>
  <div class="source"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span># Error Handeling</pre>
<pre class="line before"><span class="ws"></span>@app.errorhandler(404)</pre>
<pre class="line before"><span class="ws"></span>def page_not_found(e):</pre>
<pre class="line current"><span class="ws">    </span>return render_template('404.html'), 404</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>@app.errorhandler(500)</pre>
<pre class="line after"><span class="ws"></span>def internal_server_error(e):</pre>
<pre class="line after"><span class="ws">    </span>return render_template('500.html'), 500</pre></div>
</div>

<li><div class="frame" id="frame-4326578896">
  <h4>File <cite class="filename">"/Library/Python/2.7/site-packages/flask/templating.py"</cite>,
      line <em class="line">134</em>,
      in <code class="function">render_template</code></h4>
  <div class="source"><pre class="line before"><span class="ws">                    </span>context of the template.</pre>
<pre class="line before"><span class="ws">    </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">    </span>ctx = _app_ctx_stack.top</pre>
<pre class="line before"><span class="ws">    </span>ctx.app.update_template_context(context)</pre>
<pre class="line before"><span class="ws">    </span>return _render(ctx.app.jinja_env.get_or_select_template(template_name_or_list),</pre>
<pre class="line current"><span class="ws">                   </span>context, ctx.app)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>def render_template_string(source, **context):</pre>
<pre class="line after"><span class="ws">    </span>&quot;&quot;&quot;Renders a template from the given template source string</pre>
<pre class="line after"><span class="ws">    </span>with the given context. Template variables will be autoescaped.</pre></div>
</div>

<li><div class="frame" id="frame-4326578960">
  <h4>File <cite class="filename">"/Library/Python/2.7/site-packages/flask/templating.py"</cite>,
      line <em class="line">116</em>,
      in <code class="function">_render</code></h4>
  <div class="source"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def _render(template, context, app):</pre>
<pre class="line before"><span class="ws">    </span>&quot;&quot;&quot;Renders the template and fires the signal&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>before_render_template.send(app, template=template, context=context)</pre>
<pre class="line current"><span class="ws">    </span>rv = template.render(context)</pre>
<pre class="line after"><span class="ws">    </span>template_rendered.send(app, template=template, context=context)</pre>
<pre class="line after"><span class="ws">    </span>return rv</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>def render_template(template_name_or_list, **context):</pre></div>
</div>

<li><div class="frame" id="frame-4326579024">
  <h4>File <cite class="filename">"/Library/Python/2.7/site-packages/jinja2/environment.py"</cite>,
      line <em class="line">989</em>,
      in <code class="function">render</code></h4>
  <div class="source"><pre class="line before"><span class="ws">        </span>vars = dict(*args, **kwargs)</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>return concat(self.root_render_func(self.new_context(vars)))</pre>
<pre class="line before"><span class="ws">        </span>except Exception:</pre>
<pre class="line before"><span class="ws">            </span>exc_info = sys.exc_info()</pre>
<pre class="line current"><span class="ws">        </span>return self.environment.handle_exception(exc_info, True)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def stream(self, *args, **kwargs):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Works exactly like :meth:`generate` but returns a</pre>
<pre class="line after"><span class="ws">        </span>:class:`TemplateStream`.</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;</pre></div>
</div>

<li><div class="frame" id="frame-4326579088">
  <h4>File <cite class="filename">"/Library/Python/2.7/site-packages/jinja2/environment.py"</cite>,
      line <em class="line">754</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source"><pre class="line before"><span class="ws">        </span>if rendered and self.exception_formatter is not None:</pre>
<pre class="line before"><span class="ws">            </span>return self.exception_formatter(traceback)</pre>
<pre class="line before"><span class="ws">        </span>if self.exception_handler is not None:</pre>
<pre class="line before"><span class="ws">            </span>self.exception_handler(traceback)</pre>
<pre class="line before"><span class="ws">        </span>exc_type, exc_value, tb = traceback.standard_exc_info</pre>
<pre class="line current"><span class="ws">        </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def join_path(self, template, parent):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Join a template with the parent.  By default all the lookups are</pre>
<pre class="line after"><span class="ws">        </span>relative to the loader root so this method returns the `template`</pre>
<pre class="line after"><span class="ws">        </span>parameter unchanged, but if the paths should be relative to the</pre></div>
</div>

<li><div class="frame" id="frame-4326579152">
  <h4>File <cite class="filename">"/Users/kimkeezy/PycharmProjects/Andela-BootCamp/Week-Two/Library-Application/templates/404.html"</cite>,
      line <em class="line">9</em>,
      in <code class="function">top-level template code</code></h4>
  <div class="source"><pre class="line before"><span class="ws">    </span>&lt;meta charset=&quot;UTF-8&quot;&gt;</pre>
<pre class="line before"><span class="ws">    </span>&lt;title&gt;Title&lt;/title&gt;</pre>
<pre class="line before"><span class="ws"></span>&lt;/head&gt;</pre>
<pre class="line before"><span class="ws"></span>&lt;body&gt;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws"></span>{% extends &quot;base.html&quot; %}</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>{% block content %}</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">                    </span>&lt;p style=&quot;bacground-color: grey; font-size: 160px;&quot; align=&quot;center&quot;&gt;&lt;img src=&quot;static/animat.gif&quot; class=&quot;&quot;&gt;Oops!&lt;/p&gt;</pre>
<pre class="line after"><span class="ws">                    </span>&lt;p style=&quot;bacground-color: grey; font-size: 40px;&quot; align=&quot;center&quot;&gt;&lt;strong&gt;Sorry!&lt;/strong&gt; That page  is not on this server.&lt;br&gt;   Please check the url and try again. &lt;/p&gt;</pre></div>
</div>

<li><div class="frame" id="frame-4326579216">
  <h4>File <cite class="filename">"/Library/Python/2.7/site-packages/flask/templating.py"</cite>,
      line <em class="line">57</em>,
      in <code class="function">get_source</code></h4>
  <div class="source"><pre class="line before"><span class="ws">        </span>self.app = app</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def get_source(self, environment, template):</pre>
<pre class="line before"><span class="ws">        </span>if self.app.config['EXPLAIN_TEMPLATE_LOADING']:</pre>
<pre class="line before"><span class="ws">            </span>return self._get_source_explained(environment, template)</pre>
<pre class="line current"><span class="ws">        </span>return self._get_source_fast(environment, template)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _get_source_explained(self, environment, template):</pre>
<pre class="line after"><span class="ws">        </span>attempts = []</pre>
<pre class="line after"><span class="ws">        </span>trv = None</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-4326579280">
  <h4>File <cite class="filename">"/Library/Python/2.7/site-packages/flask/templating.py"</cite>,
      line <em class="line">85</em>,
      in <code class="function">_get_source_fast</code></h4>
  <div class="source"><pre class="line before"><span class="ws">        </span>for srcobj, loader in self._iter_loaders(template):</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>return loader.get_source(environment, template)</pre>
<pre class="line before"><span class="ws">            </span>except TemplateNotFound:</pre>
<pre class="line before"><span class="ws">                </span>continue</pre>
<pre class="line current"><span class="ws">        </span>raise TemplateNotFound(template)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _iter_loaders(self, template):</pre>
<pre class="line after"><span class="ws">        </span>loader = self.app.jinja_loader</pre>
<pre class="line after"><span class="ws">        </span>if loader is not None:</pre>
<pre class="line after"><span class="ws">            </span>yield self.app, loader</pre></div>
</div>
</ul>
  <blockquote>TemplateNotFound: base.html</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;/Library/Python/2.7/site-packages/flask/app.py&quot;, line 2000, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;/Library/Python/2.7/site-packages/flask/app.py&quot;, line 1991, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File &quot;/Library/Python/2.7/site-packages/flask/app.py&quot;, line 1567, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;/Library/Python/2.7/site-packages/flask/app.py&quot;, line 1988, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;/Library/Python/2.7/site-packages/flask/app.py&quot;, line 1641, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;/Library/Python/2.7/site-packages/flask/app.py&quot;, line 1539, in handle_user_exception
    return self.handle_http_exception(e)
  File &quot;/Library/Python/2.7/site-packages/flask/app.py&quot;, line 1498, in handle_http_exception
    return handler(e)
  File &quot;/Users/kimkeezy/PycharmProjects/Andela-BootCamp/Week-Two/Library-Application/app.py&quot;, line 160, in page_not_found
    return render_template('404.html'), 404
  File &quot;/Library/Python/2.7/site-packages/flask/templating.py&quot;, line 134, in render_template
    context, ctx.app)
  File &quot;/Library/Python/2.7/site-packages/flask/templating.py&quot;, line 116, in _render
    rv = template.render(context)
  File &quot;/Library/Python/2.7/site-packages/jinja2/environment.py&quot;, line 989, in render
    return self.environment.handle_exception(exc_info, True)
  File &quot;/Library/Python/2.7/site-packages/jinja2/environment.py&quot;, line 754, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;/Users/kimkeezy/PycharmProjects/Andela-BootCamp/Week-Two/Library-Application/templates/404.html&quot;, line 9, in top-level template code
    {% extends &quot;base.html&quot; %}
  File &quot;/Library/Python/2.7/site-packages/flask/templating.py&quot;, line 57, in get_source
    return self._get_source_fast(environment, template)
  File &quot;/Library/Python/2.7/site-packages/flask/templating.py&quot;, line 85, in _get_source_fast
    raise TemplateNotFound(template)
TemplateNotFound: base.html</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "/Library/Python/2.7/site-packages/flask/app.py", line 2000, in __call__
    return self.wsgi_app(environ, start_response)
  File "/Library/Python/2.7/site-packages/flask/app.py", line 1991, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File "/Library/Python/2.7/site-packages/flask/app.py", line 1567, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "/Library/Python/2.7/site-packages/flask/app.py", line 1988, in wsgi_app
    response = self.full_dispatch_request()
  File "/Library/Python/2.7/site-packages/flask/app.py", line 1641, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Library/Python/2.7/site-packages/flask/app.py", line 1539, in handle_user_exception
    return self.handle_http_exception(e)
  File "/Library/Python/2.7/site-packages/flask/app.py", line 1498, in handle_http_exception
    return handler(e)
  File "/Users/kimkeezy/PycharmProjects/Andela-BootCamp/Week-Two/Library-Application/app.py", line 160, in page_not_found
    return render_template('404.html'), 404
  File "/Library/Python/2.7/site-packages/flask/templating.py", line 134, in render_template
    context, ctx.app)
  File "/Library/Python/2.7/site-packages/flask/templating.py", line 116, in _render
    rv = template.render(context)
  File "/Library/Python/2.7/site-packages/jinja2/environment.py", line 989, in render
    return self.environment.handle_exception(exc_info, True)
  File "/Library/Python/2.7/site-packages/jinja2/environment.py", line 754, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "/Users/kimkeezy/PycharmProjects/Andela-BootCamp/Week-Two/Library-Application/templates/404.html", line 9, in top-level template code
    {% extends "base.html" %}
  File "/Library/Python/2.7/site-packages/flask/templating.py", line 57, in get_source
    return self._get_source_fast(environment, template)
  File "/Library/Python/2.7/site-packages/flask/templating.py", line 85, in _get_source_fast
    raise TemplateNotFound(template)
TemplateNotFound: base.html

-->
